"""add some_field to User

Revision ID: 2927db5bc92f
Revises: 31ba4b09bc8d
Create Date: 2025-08-13 09:00:25.269980

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2927db5bc92f"
down_revision: str | Sequence[str] | None = "31ba4b09bc8d"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("role", sa.Enum("GM", "Player", name="role_enum"), nullable=False),
        sa.Column("discord_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=False)
    op.create_table(
        "sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column(
            "status",
            sa.Enum("open", "closed", name="session_status_enum"),
            nullable=False,
        ),
        sa.Column("gm_id", sa.Integer(), nullable=False),
        sa.Column("schedule", sa.String(length=128), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["gm_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "characters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("clazz", sa.String(length=32), nullable=True),
        sa.Column("stats", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_char_session_name", "characters", ["session_id", "name"], unique=True)
    op.create_index(op.f("ix_characters_name"), "characters", ["name"], unique=False)
    op.create_table(
        "dice_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("roller_id", sa.Integer(), nullable=True),
        sa.Column("formula", sa.String(length=64), nullable=False),
        sa.Column("detail", sa.JSON(), nullable=True),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["roller_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_dice_logs_session_id"), "dice_logs", ["session_id"], unique=False)
    op.create_table(
        "encounters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("round", sa.Integer(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_encounters_session_id"), "encounters", ["session_id"], unique=False)
    op.create_table(
        "log_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=16), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["sessions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_log_entries_session_id"), "log_entries", ["session_id"], unique=False)
    op.create_table(
        "initiatives",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("encounter_id", sa.Integer(), nullable=False),
        sa.Column("actor_name", sa.String(length=64), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("is_delayed", sa.Boolean(), nullable=False),
        sa.CheckConstraint("value >= -100 and value <= 1000", name="ck_init_value_range"),
        sa.ForeignKeyConstraint(
            ["encounter_id"],
            ["encounters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_init_encounter_value",
        "initiatives",
        ["encounter_id", "value"],
        unique=False,
    )
    op.create_index(
        op.f("ix_initiatives_encounter_id"),
        "initiatives",
        ["encounter_id"],
        unique=False,
    )
    op.drop_table("players")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "players",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index(op.f("ix_initiatives_encounter_id"), table_name="initiatives")
    op.drop_index("ix_init_encounter_value", table_name="initiatives")
    op.drop_table("initiatives")
    op.drop_index(op.f("ix_log_entries_session_id"), table_name="log_entries")
    op.drop_table("log_entries")
    op.drop_index(op.f("ix_encounters_session_id"), table_name="encounters")
    op.drop_table("encounters")
    op.drop_index(op.f("ix_dice_logs_session_id"), table_name="dice_logs")
    op.drop_table("dice_logs")
    op.drop_index(op.f("ix_characters_name"), table_name="characters")
    op.drop_index("ix_char_session_name", table_name="characters")
    op.drop_table("characters")
    op.drop_table("sessions")
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
