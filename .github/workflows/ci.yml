name: CI

on:
  push:
    branches: [ main ]   # main 브랜치에 push 시 실행
  pull_request:          # PR 생성/갱신 시 실행

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------- Backend --------------------
  backend:
    name: Backend (pytest & pre-commit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install deps
        run: poetry install --no-interaction

      - name: Run migrations
        run: poetry run alembic upgrade head

      - name: Pre-commit
        run: poetry run pre-commit run --all-files

      - name: Pytest
        run: poetry run pytest -q

  # -------------------- Frontend --------------------
  frontend:
    name: Frontend (lint, typecheck, vitest, build)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: ./frontend
        run: npm ci

      - name: Lint
        working-directory: ./frontend
        run: npm run lint

      - name: Typecheck
        working-directory: ./frontend
        run: npm run typecheck

      - name: Unit tests (Vitest)
        working-directory: ./frontend
        run: npm run test -- --run

      - name: Build
        working-directory: ./frontend
        env:
          VITE_API_BASE: http://127.0.0.1:8000/api/v1
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: frontend/dist

  # -------------------- E2E --------------------
  e2e:
    name: E2E (Playwright)
    runs-on: ubuntu-latest
    needs: [backend, frontend]   # 앞 두 잡 성공 시에만 실행
    steps:
      - uses: actions/checkout@v4

      # Backend 준비
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install backend deps
        run: poetry install --no-interaction

      - name: DB migrate
        run: poetry run alembic upgrade head

      - name: Run backend server
        run: |
          nohup poetry run uvicorn backend.app.main:app --host 127.0.0.1 --port 8000 &
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8000/api/v1/healthz >/dev/null; then
              echo "Backend is up"; break
            fi
            sleep 1
          done

      # Frontend 준비
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        env:
          VITE_API_BASE: http://127.0.0.1:8000/api/v1
        run: npm run build

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Serve frontend (vite preview)
        working-directory: ./frontend
        run: |
          nohup npm run preview -- --port 5173 --strictPort &
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:5173 >/dev/null; then
              echo "Frontend is up"; break
            fi
            sleep 1
          done

      - name: Run E2E tests
        working-directory: ./frontend
        env:
          BASE_URL: http://127.0.0.1:5173
        run: npx playwright test
